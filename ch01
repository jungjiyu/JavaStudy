컴파일러: 소스코드->기계어 변환
IDE 통합개발환경: 프로젝트 생성, 디버깅 등의 기능을 통합적으로 제공하는 프로그램


오라클: 자바 라이선스 가진 회사. JDK(java development kit) 를 배포. 

자바:
1. 모든 운영체제서 실행 가능
	: 윈도우 작성 내용을 리눅스서 바로 실행 가능
2. 객체지향 프로그래밍
3. 메모리 자동 정리
	: RAM 자동 관리. 딱히 메모리 부분에 신경 안써도 됨
4. 라이브러리 풍부



자바소스파일 : .java 텍스트 파일

바이크 코드 파일 
	: 어셈블리어 느낌. 가상머신(vm) 이 이해할 수 있는 중간 레벨로 컴파일 한것. 바로 실행은 불가.
	: .class 확장명

javac 명령어 == 컴파일러 :소스파일로 바이트 코드 파일 생성

java 명령어 :가상머신(vm)이 바이트코드 파일을 기계어로 번역하여 실행 파일 만듬

JVM 자바 가상 머신: 인터프리터
	:JDK 에 포함된 소프트웨어.
	: 바이트 코드 파일을 다양한 운영체제에서 수정없이 쓸 수 있게 함 
		: 윈도우용 JVM 쓰면 윈도우서 실행할 수 있게 바이트 코드가 번역되고 리눅스용 JVM 씀 리눅스서 실행할 수 있게 바이트 코드가 번역됨.
	: 그러니까 얘 덕분에 운영체제 상관 없이 개발 가능


JDK 자바개발도구: 자바개발위해필요
	:JVM(실행환경) , 컴파일러 등 들어있음
	:bin 폴더> javac, java 등 다양한 명령어 들어있음

환경변수 : 일종의 포인터. 특정 파일,폴더의 주소를 저장하는 변수
	JDK 설치된 폴더: JAVA_HOME 으로 설정했음 (내가)

이클립스
	:Work Space 폴더: 프로젝트가 기본적으로 저장됨(eclips 가 깔린 폴더와는 별개임)	
		: 난 c:/SelfStudyJava 로 설정함
		1) .metadata 폴더
			: 이클립스 초기 설정(폰트, 테마 ..) 저장
				:eclips 설정 초기화 하고 싶을때 걍 삭제함 됨. (또 생성됨)
		2) 프로젝트 폴더			
			1. src 폴더: .java 담당(소스코드 저장)
				1) module-모듈명.java
				2) 패키지 폴더	
					1. 소스 파일
			
			2. bin 폴더: .class 담당(컴파일된 파일 저장)
				: 구성은 src 폴더랑 같은데 확장자가 .class 
			

	:perspective 
		: 이클립스에서 프로젝트 개발할때 유용하게 사용할 수 있는 view(창) 들을 미리 묶어 이름을 붙여놓은 것
		: 콘솔 창 같은거
	: 컴파일 메뉴가 따로 없고 저장함 걍 컴파일됨.



프로그램 생성할때마다 해야하는 기본 절차
	1. 프로젝트 생성
	2. 프로젝트 모듈 편집
		module-모듈명.java 편집 ) 중괄호 안에 requires java.se; 쓰기
			: JDK 의 모든 모듈을 필요로 한단 뜻.
			: 끝에 se 는 java SE 를 뜻함
	3. 패키지 생성
		:패키지)  폴더 비슷. 소스파일 밑 컴파일된 바이트 코드를 기능 별로 관리 하기 쉽게 한다.
	4. 생성한 패키지에 클래스 생성 == 자바 소스파일 생성
		
	5. 소스 파일 작성후 저장하여 컴파일
	6. 생성된 바이트 코드 파일을 런 아이콘( Run as Java Application ) 눌러서 실행. 


소스코드 기본적 구성
패키지 선언:		
	package 패키지명.소스파일명; 

결과)
		 public class 클래스명
			public static void main(String[] args){
		}
		}
	


