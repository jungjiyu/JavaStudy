양진석 강사
b-b0317@naver.com

수업자료: https://naver.me/x7rbqGim
비밀번호: kg1234


전체 과정
	1. 웹프로그램 개요, 개발환경 설정
	2.서블릿
	3.JSP && Cookie & Session
	4. JDBC (oracle)
	5. 모델 1 기반의 회원관리
	6. Cookie & Session	
	7. 파일 업로드
	8. ?
	9/ MVC 패턴 게시판 구현


----------------------------------------------------
웹 프로그래밍) 웹 어플리케이션을 구현하는 행위
	: 웹 어플리케이션 ) 웹을 기반으로 작동하는 프로그램
		: 웹) 1개 이상의 "사이트"가 연결되어있는 인터넷 서비스의 형태
			: 인터넷) 1개 이상의 "네트워크"가 연결되어있는  형태
			

URL uniform resource locator
	: 네트워크 상에서 자원이 어디있는지 알려주기 위한 규약
		: 그러니까 웹 페이지를 찾기 위한 주소
		: https://www.naver.com:443
	
	: 구성 ) 프로토콜 + 도메인주소 + 포트
		: 프로토콜 )
			: 네트워크상에서 약속한 통신규약
			: HTTP , DHCP, PDP ...
				: HTTP ) 인터넷에서 하이퍼텍스트를 교환하기 위한 통신 규약
					; 하이퍼텍스트트렌스퍼프로토콜
					: 포트번호가 80 번으로 정해져있음
				: HTTPS) http 에 데이터 암호화가 추가된 통신규약 
					: HTTP + secure
					: 포트번호가 443 으로 정해져있음

		: IP
			: 인터넷프로토콜
			: 네트웍 상에서 컴터 식별 가능하게하는 고유번호	
				: 아파트 주소 느낌
			: IP 주소 자체를 외우긴 어렵기 떄문에 주로 도메인 주소를 활용하여 사용

		: Port 포트
			: 해당 컴터의 구동되고 있는 프로그램을 구분할 수 있게 하는 번호
				: 아파트 호수 느낌

		: 도메인주소)
			: www.naver.com

		: 포트)
			: 443

웹 프로그래밍 구성 요소
	: 서버 Server
		: 정보를 제공해주는쪽
		: 인터넷에 연결된 컴퓨터
	: 클라이언트 Client
		: 정보를 요청하는 쪽
		: 웹사이트에 접근하려고 사용하는 기기


웹 컨테이너
	: 서버가 보낸 JSP등의 파일들을 실행하고 실행 결과를 다시 서버로 보내주는 역할
	: 웹 서버상에서 프로그램을 동작시키기 위한 프로그램
	: WAS 의 구성요소

DB database
	: 데이터베이스의 약자. 데이터를 구조화하고 저장하기 위한 응용 프로그램.


웹 프로그램 동작 
	: 구성 요소
		: Client
			: WAS 로 request 보내고  , respond 받음
			: ex) 웹 브라우져, 모바일 앱
		: WAS) web server + web container
			: Web Server
				: client로부터 request 를 받고, respond 를 보냄
				: 단점 ) 동적 처리를 못한다>> Web Container 의 도움이 필요하다
					: ex) 빵집에 손님이 왔다. 빵집은 매대에 만들어 둔 빵이 있다. 캐셔는 미리 만들어둔 빵을 손님에게 줄 수 있지만 당장 없는 빵은 손님에게 줄 수 없다.
				: ex) 네이버 서버

			: Web Container
				: Web Server 를 보조한다
				: 동적 처리(Dynamic processing)가 가능하다. 
					: 캐셔로부터 요청을 받아 제빵사가 빵을 만들어서 캐셔에게 준다
				: DB와 연결되있따
				: ex) JSP, Servlet
					: Servlet 서블릿 ) 클라이언트의 request 를 처리하고 그 결과를 반환하는 역할을 하는 자바 프로그램
				
		: DB
			: Web Container 와 연결되있다

	: 동작
		: request
		: respond

CGI Common Gateway Interface
	: 웹 프로그래밍 동작 원리 중 "하나"
	: 클라이언트 request 마다 웹서버에서 "외부" 프로그램을 호출하여 그 외부 프로그램이 request를 처리하고 그 결과를 웹 서버에 반환하고, 웹 서버가 받은 결과를 클라이언트에게 respond하는 방식
		: 외부 프로그램을 실행하는 것이기 때문에 매 요청마다 프로세스를 생성하고 종료해야하므로 오버헤드가 크고 느리다는 단점이 있다
		: 그러니까 짜장면 집에서 짜장면을 주문했는데 주인장이 직접 요리해서 내는게 아니라 또 주인장이 다른 집에 전화해서 음식 받고 전달해주는 격


WAS Web Application Server == webserver + web container
	: 웹 서버와 어플리케이션 사이서 동작
	: 클라이언트가 web server 에 request을 보내면 web server 는 request 를 WAS 에게 전달하고, WAS는 request 를 처리하기 위해 필요한 기능 들을 수행한다. WAS는 처리가 완료되었으면 처리 결과를 web server에게 반환하고 웹 서버는 그 결과를 Client 에게 respond 로 보낸다
		: 그러니까 짜장면 집에서 짜장면 주문하면 주인장이 직접 요리해서 손님한테줌
	: WAS 내부에서 프로세스를 관리하기 때문에 성능이 용이하고 확장성이 좋다

웹 어플리케이션 장점
	: 사용자- 별도의 설치 없이 프로그램 사용 가능
	: 개발자 - 사용자용 프로그램을 별도로 제작 않고 HTML을 이용하여 사용자 UI를 구축하기떄문에 비용감소


JSP 웹 어플리케이션의 장점
	1. JAVA API 많다
	2. 운영체제 구속 안받는다
	3. 실제코드가 프로그램서 노출 안되 보안상 장점 있다

웹 개발 필수 선행학습
	: HTML >> 웹 브라우저 창에 웹 문서의 내용을 보여주는데 필요한 약속. 표기법. 
		: 3-4일 컷
	: 자바스크립트 >> 애니메이션효과
	: 자바 언어


객체를 생성할때는 반드시 생성자가 필요하다
	: getInstance( )같은 건 이미 내부적으로 생성자가 호출된거다

--------------------------------------------------------

이클립스
	: 통합개발환경 IDE (Intergrated Development Environment)
		: 편집 컴파일 디버깅 등 한번에 할 수 있게 만든 통합 개발 환경

	: 퍼스펙티브 Perspective ) 전체 화면을 아울러 말함
		: 바 3가지
			: 메뉴바 
				: 맨 위에 File , Edit ,Source .. 같은거 있는 라인
			: 툴바
				: 메뉴바 밑 디버깅하는 버튼 있는라인 라인
			: 퍼스펙티브바
				: server 같은거 뜨는 창의 윗라인( 색인 같이 되있는거)
		: 창
			1. package explorer
				: 프로젝트 계층구조 볼 수 있는 창
			2. 가운데
				: 소스코드 편집
			3. Console
				: 프로그램 실행시 결과 출력해주는 창
			4, Outline
				: 소스코드를 문법적 요소 확인하는 창
			5. Problems
				: 소스코드에 뭔 문제 있는지 알려주는 창
			6. Task List
				: 작업 관리할 수 있는 장소를 제공하는 창

	
	: 폴더계층
		: 워크스페이스 폴더
			: metadata ) 해당 폴더를 워크스페이스로 활용할 수 있게 해주는 폴더. 
				: 초기 설정 내용이 들어가 있다.

			: 프로젝트 폴더
				: bin 폴더
					: 패키지
						: 바이트코드 .class 파일
				: src 폴더
					: 패키지
						: 소스코드 .java 파일
	
	: UTF-8
		: 유니코드 인코딩 방식 중 하나
		: 조합형 방식의 Character Set.
		: 아스키코드 == 1바이트, 한글 == 3 바이트
			
JAVA_HOME
	: jdk 가 설치된 위치를 나타내는 환경변수명
		: 환경변수란?
			: 특정 경로값을 저장한 변수 
			: 운영체제에 종속적
			
	: 나중에 ㅈㄴ 쓴다


아파치 톰캣 Apache Tomcat
	: 자바 서블릿 컨테이너이다. 그러니까 Servlet 이다. 그러니까 웹 어플리케이션을 실행하기 위한 오픈소스 웹 서버 솦웨어다
	: 나는 이거 c:/FebJava/ 경로에 압축 푼거 저장해놨다


이클립스(==에디터)와 아파치 톰캣(==서버) 연결
	: use Tomcat installation >> Apach Tomcat 이 설치되어있는 곳으로 path 를 요청하겠다.
	: Publish modul context to seperate XML files >> 이클립스에서 환경설정이나  xml 파일 작업을 하면 그걸 실제 톰켓이 있는 서버와 동기화

web.xml 이란
	: <web-app> 태그로 시작하고 종료하는 문서.
	: web application의 동작과 관련된 다양한 환경정보를 태그 기반으로 설정하는 파일
		: 그러니까 서버의 설정 파일.
		: web.xml에 작성되는 내용
			1. ServletContext 의 초기 파라미터 
				: Session 의 유효 기간 설정
			2. Servlet/JSP 대한 정의
				: Servlet

Java Resources 의 src\main\java
	: 자바 소스 파일의 위치

src\main\webapp
	: 웹 컨텐트 파일의 위치
	src\webapp\web-inf\web.xml
		: 서버 설정 파일
		

context path == context root
	: 서버 >> 프로젝트가 하나의 웹 어플리케이션. 서버 프로그램은 2개 이상의 웹 프로젝트를 구현 가능. 이때 웹 프로젝트끼리 구분하기 위한 것이 context path

content directory 
	: 웹 컨텐트 파일들의 위치


C##JAVAUSER ,  java2024

