데이터 베이스 data base 
	: 데이터의 "중복"을 제거하고 데이터의 효율적 처리를 위한 것
		: 테이블A
			: column ( 속성 )
				: 데이터1 . 데이터 2...
		: 테이블B
			: column ( 속성 )
				: 데이터1 . 데이터 2...  

	
	: 구조적 관계형 객체 지향형 >> 주로 관계형 사용
		: 관계형 데이터 베이스 . Rdbms) 사전에 정의된 연결 관계가 형성된 데이터 베이스
			: 테이블로 이루어져있고, 테이블은 key 와 value 의 관계를 나타냄
				: 테이블의 종류 ) question table ,answer table
				: 테이블의 구성
					: 행 row  == 튜플 tuple == 레코드 record
						: 설명
							: 관계된 데이터의 묶음
							: 가로 방향
							: 한 테이블의 모든 행은 같은 수의 열을 가짐
						: 종류
							: 
					: 열 column == 필드 field == 속성 attribute
						:설명
							: 각 열은 "유일한" 이름과 타입을 가짐
						: 종류	
							(1) key
								1. primary key 기본키
									: 행의 식별자로 이용되는 열 . 주민등록 비슷
									: 겹칠 수 없음
								2. foegin key 외래키
									: 한 케이블의 키 중에서 다른 테이블의 행을 식별할 수 있느 키. 테이블 간의 관계를 나타내는 키
									
										: 관계 ) 다른 테이블의 행과 행을 연결하는 방식으로 생성됨
											: 일대일 , 일대다 , 다대다 관계
									: 기본키를 참조하는 필드.

							(5) 
	
			: question table , answer table
				: 각 키엔
					: primary key == 주민등록번호 같은거	
						: id cloumn 과 연결해둔다
					: foregin key == 연결 구조를 만들어주는 키
						: primary key 삭제함 foregin key 도 같이 삭제 된다.

		: 데이터의 분류, 정렬 , 탐색 속도가 빠르다
 

	: DBMS
		: 데이터 베이스를 효과적으로 설계 운영 복구 할 수 있는 소프트웨어
		: Oracle , mySQL 같은거
		: 데이터 베이스 서버 <<  DBMS << 어플리케이션
			: 데이터 베이스 서버 == 하드웨어
			: DBMS >> 소프트웨어
			: 어플리케이션 >>???

	: Oracle 설치 방법
		1. 설치 마법사 시작에서 설치
		2. 라이센스 동의함 클릭후 다음 클릭 
		3. c:\app\계정명\product\21c\ 경로 확인 후 다음 클릭
		4.  SYS, SYSTEM 비밀번호 1234 확인 후 입력
			: SYS >> 최고 관리자
			: SYSTEM >> 
		5. 설치 클릭 10-20 분 소요


---------------------------------------

SYS : 오라클 db 관리자 super-user 계정
SYSTEM : 백업 , 복구 , 데이터베이스 업그레이드를 제외한 모든 기능 수행 가능

sql+ : 오라클 dbms 를 설치하면 자동으로 제공해주는 프로그램 . 명령어를 사용하여 교작작업가능
	: 어플리케이션에 해당( 하드웨어 << 오라클 << 어플리케이션 << 사용자 에서 )
	: cli 환경에서 사용 가능한 어플리케이션
		: cli == command line interface ( <----> gui == graphic user interface)


cmd 창에서 다음을 수행
(1) sqlplus -v
	: sqlplus 의 버전을 확인한다

(2) sqlplus
	: sqlplus 를 작동시킨다
	: 사용자명 입력하라고 하면 sys / as sysdba 를 입력
		: 최고 관리자 권한으로 로그인하는 거
		: sys == SYS . 최고 관리자
		: as sysdba == 옵션 
	: 비밀번호는 1234 로 입력
		: 우리가 설치할때 그렇게 설치했으니까
	: 정상적으로 실행하면 앞이 SQL> 로 바뀜

(3) create user C##JAVAUSER identified by java2024;
	: 사용자 계정을 생성
		: C## 뒤 == 아이디명 <<sql 에선 C##과 아이디는 한 몸이다
		: identified by 뒤 == 비밀번호
		: 세미콜론 입력
			: 세미콜론 안붙임 입력 안됨 

(4) grant connect, resource, dba to C##JAVAUSER;
	: 권한 부여
		: connet == 로그인
		: resource == 데이터베이스 관리 가능한 권한
		: dba == 최상위 권한
(5) commit;
	: 변경사항 저장
		: 중간중간 계속 하는게 좋다
(6) revoke connect, resource, dba from C##JAVAUSER;
	: 권한 취소

(7) drop user C##JAVAUSER:
	: 사용자 계정 삭제

(8)exit;
	: 종료

(9) C##아이디명
	: 사용자명 입력 란에 이미 생성한 계정으로 로그인할때 사용

(10) 
create table itMember(
id varchar2(10) primary key,
pw varchar2(10),
name varchar2(10) not null,
age number(3),
phone char(13)
);
	
	: 테이블 생성 하기
		: 5 개의 열
			: id << 기본키
			: pw
			: name	
				: 생략이 불가하다
			: age 
			: phone

(11) select * from tab;
	: 전체 테이블 조회
		: tab == 테이블
		: select == 조회
(12) 
insert into itMember(id, pw, name, age, phone) values('hong', '1234', '홍길동', 20, '010-1111-2222'); 
insert into itMember(id, pw, name, age, phone) values('sung', '5678', '성춘향', 21, '010-1111-3333'); 
insert into itMember(id, pw, name, age, phone) values('lee', '1111', '이몽룡', 22, '010-1111-5555'); 
insert into itMember(id, pw, name, age, phone) values('jang', '2222', '장보고', 23, '010-1111-6666'); 


	: 데이터 추가

(13)select * from itMember;
	: 데이터 전체 조회

(14) select * from itmember where age=20;
	: 나이가 20 세인 멤버 전체 조회

(15) update itMember set phone = '010-1234-5678' where name='홍길동';
	: 이름이 홍길동 인 데이터의 전화번호를 010-1234-5678 로 변경
	
(16) delete from itMember where id='lee';
	: id 가 lee 인 데이터 삭제

(17) rollback;
	: 바로 이전 커밋 시점으로 돌아감<< 커밋을 많이 해두는게 좋다

(18) drop table itMember
	: itMember 테이블 삭제
 -- -------------------------------------------------

sql
	: 관계형데이터베이스관리시스템(RDBMS) 에서 데이터를 관리하기 위해 사용되는 프로그래밍 언어
	: 명령어 문장 단위는 ' ; '
		: sql 자체를 실행할때는 빼고. 그러니까 SQL > 로 바뀌었을때 그렇단 얘기.
	: 트랜잭션
		: DBMS 에서의 하나의 작업 단위

DML ) data manipulation language
	: Select ) 테이블서 조건에 맞는 데이터 검색
	: Insert ) 테이블서 새로운 데이터 삽입
	: Delete ) 테이블서 조건에 맞는 데이터 삭제
	: Update ) 테이블서 조건에 맞는 데이터의 내용을 변경

DDL ) data definition language
	: Create ) Schema, Domain , Table , Index 정의
	: Alter ) 테이블 대한 정의 변경
	: Drop ) Schema, Domain , Table , Index 삭제

DCL ) data control language
	: Grant ) 데이터 베이스 사용자에게 사용권을 부여
	: Revoke ) 데이터 베이스 사용자에게 사용권 부여를 취소

TCL ) Transaction control language<< 트랜잭션 : db 상태를 변환(=select , inssert , delete,upgrade)시키기 위해 수행하는 작업의 단위
	: Commit ) 데이터베이스 조작 작업이 정상적으로 끝났다고 알려줌
		: 데이터 변경 사항을 저장 
	: Rollback ) 데이터베이스 조작 작업을 기존 상태로 복구
	: SavePoint ) 데이터 베이스 조작 작업시 저장 지점을 만들어감
--------------------------------------------------

데이터 타입
	: 문자 데이터 타입 ) 
		: tip ) 앞에 N 붙어있음 유니코드고 , VAR 붙어있음 가변길이
		1.  CHAR(N) : 고정길이문자
			: N == 길이
		2. VARCHAR2(N) : 가변길이문자 << 더 많이 사용
			: 처음에 설정한 길이보다 남아돌면 조절을 알아서  해줌
				: 저장공간 절약
		3. NCHAR(N) : 고정길이 유니코드 문자
		3. NVARCHAR2(N) : 가변길이 유니코드 문자

	: 숫자 데이터 타입 ) 
		1. number(p,s) 
			: +-38 자리수의 숫자를 저장
			: p == 소수점 앞의 자릿수 , S == 소수점 뒤의 자릿수
			: ex)
		 		number(3)
					: 최대 3자리수까지 표현 가능한 ㅅㅅ자
				number(2,2)
				: 최대 2 자리 , 소수자리 포함( -99.99 ~ 99.99 )
	: 날짜형 데이터 타입)
		1. DATE: 시,분,초 까지 표현 가능
		2. TIMESTAMP : 밀리초까지 표현 가능

많이 쓰는 sql 명령어
	select : 검색
	where : 조건을 설정
	star : 전체 지정
	update : 수정
	delete : 삭제
	rollback : 되돌리기
	commit: 저장하기

---------------------------------

테이블 생성 명령어

create table [테이블명]
( [컬럼명] [데이터타입] [기본값. 생략가능] [null 허용가능 여부 . 생략 가능] , ... ); 

	: not null == 널값 허용 불가 == 생략 불가
	: 찐으로 [ ] 를 쓰라는게 아니라 띄어쓰기 하란 의미임.
	: 데이터 베이스는 형식이 엑셀과 비슷

-----------------------------------------

테이블에 값 삽입 명령어
insert into 테이블명(column명1 , cloum명2 ..) values (data1 ,data2 ..);
	: cloum 명 생략 가능 . 근데 그럴꺼면 숫서 반드시 사용해야

데이터 전체 조회
select * from 테이블;

조건에 맞게 조회
select 열 from 테이블 where 조건

데이터 수정
update 테이블 set 칼럼 = 변경할값 where 조건;

데이터 삭제
delete from 테이블 where 조건;

테이블 자체 삭제
drop table 테이블;

=============================================================

sqldeveloper : gui 환경
설치 중 환경 설정 임포트 확인이 나오면 꼭 아니오 확인!

+ 눌러서 접속

	name : DailyJava2
	사용자이름 : C##JAVAUSER
	비밀번호: java2024
	포트 1521

	>>다 했음 접속 클릭

만든 거 접속 하는 법 >> 클릭후 비번 입력


대문자 구분 없음

ctrl+enter == '한줄'실행
	: 한 줄은 ';' 를 의미. 엔터 기준 아니라 
f5 == 여러줄 실행 
