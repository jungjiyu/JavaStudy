
디폴트생성자 == 기본생성자 == arg 도, 블럭내용도 없는 생성자


디폴트 생성자는 명시적인 생성자가 있음 자동으로 추가되지 않는다	
	>> 디폴트 생성자를 사용하고 싶으면 따로 디폴트 생성자를 명시한다.

생성자 사용이유 >> 객체초기화

인터페이스 : 표준화된 작업 위해 사용
	: 기능 구현 없이 기능만을 모아둔것
	: 선언방법
		interface 인터페이스명{
			상수(static final 생략시 자동 입력)
			추상메서드 ( abstract 생략  시 자도 ㅇ 입력)
		}

	: 사용법 
		: 클래스 implements 인터페이스명
		: 클래스가 다른 클래스를 상속받는것처럼 인터페이스를 상속받는거다

인터ㅍ페이스를 쓰는 이유
	1. 강제성
		: 인터페이스를 상속받은 ㅋ를래스는 인터페이스 내의 추상메서드를 무조건 구현해야한다 . 다 구현할때까지 빨간줄 안없엊진다
		: 구현한 추상메서드들은 overriding 된 것이므로 @Overriding 써도 오류 안나고, 씀 좋다
	2. 다중상속구현가능
		: 일반적으로는 자바에서 클래스 다중상속이 불가하지만 인터페이스는 여러개 상속받을 수 있으므로 다중상속을 구현할 수 있다

: 추상클래스(오로지 상속 목적)보다 더 설계를 위한 거다 

:클래스에서 다중상속 못하게 막아둔 이유
	: 메서드의 모호성)
		:다중상속을 하면 오버라이딩 된게 있을때 뭘 호출해야할지 우위를 결정할 수가 없어서 자반는 문법적으로 존나 엄격하기 때문에 다중상속을 못하게 제한하는거다



해시맵 HashMap
어레이리스트 ArrayList
