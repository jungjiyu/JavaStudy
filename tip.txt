1. jsp html 뭐 그런거에서의 prameter는 주로 다른 페이지로 이동과 동시에 전달되는 데이터를 가리키는 용어로 사용한다  (자바나 c언어서 처럼 매서드 선언부에서 선언된 변수들을 가리키기보다는... 얘네들은 걍 argument 라고 부르자) 


2. html . jsp 이런데에서는 주로 값을 " 를 사용해 입력하고 java script 같은 경우엔 주로 ' 를 사용하여 입력한다

3. context >> 
  : 애플리케이션의 맥락과 흐름을 관리하는 것과 관련된 것
  : 걍 단어로 해석하면 맥락이란 뜻인데, 이는 프로그래밍 내에서도 비슷한ㄴ 의미를 가지는것
    : context 어쩌구 예시
      1. ServletContext
        : 서블릿 컨텍스트. 그러니까 서블릿 애플리케이션의 전체적인 흐름으 관리
            : 그러니까 프로그램의 전반적인 환경관리, 상호 작용 등을 돕는 역할을 하는 객체
              - 서로 다른 서블릿 간의 공유 데이터 관리
              - 프로그램의 설정 정보 관리
              - 세션 관리
                - ... 


5. 인코딩 관련 정리

Servlat에서는 doPost 메서드 내부서 아래의 세 줄을 기본적으로 적어주는 편
  request.setCharacterEncoding("UTF-8"); 
  response.setCharacterEncoding("UTF-8"); 
  response.setContentType("text/html; charset=UTF-8"); 

  : 일단  `response.setCharacterEncoding("UTF-8")` 는 클라이언트로 부터 받은 request의  문자 인코딩을 설정합니다. 이것이 없으면 기본적으로 ISO-8859-1이 사용되니까 얘는 필수다
  : response 객체 관련 세팅 에서는  response.setContentType("text/html; charset=UTF-8");  만 해도 문제가 없긴 하지만  response.setCharacterEncoding("UTF-8");  까지 해주는 게 좋다
      : response.setContentType("text/html; charset=UTF-8")  >> 클라이언트에게 전달되는 응답의 콘텐츠 타입(콘텐츠의 유형과 문자 인코딩)을 설정
      : `response.setCharacterEncoding("UTF-8")`>>   문자 인코딩을 명시적으로 설정함으로써 코드의 가독성을 높이고, 서블릿의 다른 부분에서도 이를 참조하여 사용할 수 있음.


JSP 에서는 파일 생성시 코드 윗 부분에 아래와 같은 지시자가 기본적으로 생성됨
  <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> 

  : 이때 contentType 는 Servlet의  response.setContentType 에 대응하는 거고 , pageEncoding 에서는  response.setCharacterEncoding  에 대응하는 거임

  : ***** 지시자 부분 tip << 지시자 부분에서는 주로 response 객체와 관련된 설정을 지정한다(request 객와 관련된 설정을 여기서 하진 않는다) . request 객체에 관련한 설정은 스크립트릿(<% %>)에서 처리한다.
      : 그래서 답장 받고 전송하는 코드에서 request.setCharacterEncoding("UTF-8"); 은 해주지만 별도로 response.setContentType("어쪼규") 이런건 안해주는 거다.



