


JDBC vs Spring JDBC
	: 일단 둘다 spring 에 내장 안되있어서 따로 다운받아야된다

Java DataBase Connectivity
	:데이터베이스에 연결 및 작업을 하기 위한 자바 표준 인터페이스이다. 
	:반복적인 작업이 꽤 있다
		connection 연결, statement 준비, executequery||executeUpdate 등
	: ojdbc8 라이브러리를 다운받으면 쓸 수 있다
		: 자동으로 의존성 라이브러리 깔아준다 (우리가 예전에 직접 .jar 파일 옮겨야했었던거 이젠 안그래도 된다)
		: oracle jdbc 의 줄임말인거다

Spring JDBC
	: JDBC의 반복적인 로직 처리 스프링 프레임워크가 해준다.


커낵션 풀 Connection pool >> DB와 연결된 객체를 저장해두는 pool.
	: WAS 가 실행되면서 DB와 미리 connect(연결)을 해놓은 객체들을 pool에 저장해 두었다가, 클라이언트 요청이 오면 connection을 빌려주고, 처리가 끝나면 다시 connection을 반납 받아 pool에 저장하는 방식을 말한다. 
	: 톰캣이나 스프링에 내장되있는건 아니라 따로 라이브러리 깔아야된다
		: HikariCP 라이브러리 >> 스프링의 JDBC Template과 커넥션풀을 관리하는 기능
			: 물론 mavenrepository 에 코드 긁 해서  pom.xml 에복붙하는거



----------------------------------------------------------------------------------------

주의 >> spring legacy pj 만들때 group id 를 다른 프로젝트와 하면 ㅈ된다
	: 해딩 groupid 를 가진 기존 프로젝트까지 못실행하게 되므로 프로젝트 마다 다 다르게 해야된다


새로만든 프로젝트 설정의 경우 
	pom. xml  
		1. 일단 properties 이하부터 이전 프로젝트에서 복붙해온다
		2.  필요한 라이브러리 저장한다
			1. ojdbc8 >> 걍 젤 클릭수 많은거
			2. spring jdbc >> 5.3.23 버전 맞춰서
			3. hikaricp >> 걍 젤 클릭수 ㅏㅁㄶㅇ느거

	web.xml : 한글 filter 부분만 복붙해온다
	root-context.xml : 드디어 쓴다 !
		: db관련 bean 을 생성한다 >> HikariConfig 빈,  HikariDataSource 빈, JDBC빈 을 등록한다
			: 주의
				: 헷갈리면 안되는게 이전에 maven 프로젝트에서 우리가 직접 만든 클래스 파일에 대한 빈을 생성했던건 src/main/resources 에  우리가 직접 xml 파일 만들어서 했었던거다
					: servlet-context.xml 에선 딱히 빈 생성 안한다. 걍 url 맵핑 관련 정의만 되어있다.
					: 어쨌뜬 db 관련 외부에서 다운 받은 라이브러리에 대한 bean 을 만드는건 src/main/webapp/web/inf/spring 의 이미 존재하는 root-context.xml 에서 하는거다

	servlet-context.xml : 
		: 




root 설정 파일
	<!--  db 관련 빈 등록을 하고 관리하는 설정 파일 -->	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@Localhost:1521:xe"></property>
		<property name="username" value="C##javauser"></property>
		<property name="password" value="java2024"></property>
	</bean>

	<!-- 히카리 데이터 소스 클래스 빈 등록 설정 -->
	<bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource">
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>




hikari 빈 설정 tip
	: 클래스 풀 네임으론 걍 java 파일에서 import 해서 그거 복붙한다


마찬가지로 dao 클래스는 interface 먼저 만든다음에 만든다
